{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\WebstormProjects\\\\AI_Face_Recognition\\\\src\\\\App.js\";\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport React from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const boundingBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.querySelector(\"#inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: boundingBox.left_col * width,\n        topRow: boundingBox.top_row * height,\n        rightCol: width - boundingBox.right_col * width,\n        bottomRow: height - boundingBox.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const PAT = '18596d847895478d9b6733203db7cb82';\n      const USER_ID = 'claytonseager';\n      const APP_ID = 'cms-smart-brain-project-2023';\n      const MODEL_ID = 'face-detection';\n      const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n      const IMAGE_URL = this.state.input;\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.json()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    };\n  }\n  componentDidMount() {\n    fetch('http://localhost:3001').then(response => response.json()).then(console.log);\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        num: 150,\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n\n/*\r\n\r\nClarifai Notes\r\nCreate an App on Clarifai and get the API Key in App Settings and paste the key in \"apiKey\" object property\r\nIF we get a Model Does Not exist error, onButtonSubmit uses predict and has changed to use the new Model ID for the model we are wanting to use\r\n\r\n */","map":{"version":3,"names":["Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","React","FaceRecognition","SignIn","Register","jsxDEV","_jsxDEV","App","Component","constructor","calculateFaceLocation","data","boundingBox","outputs","regions","region_info","bounding_box","image","document","querySelector","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","catch","error","console","log","onRouteChange","route","isSignedIn","componentDidMount","render","className","children","type","num","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/tyler/WebstormProjects/AI_Face_Recognition/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Navigation from './components/Navigation/Navigation.js';\r\nimport Logo from './components/Logo/Logo.js';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\r\nimport Rank from './components/Rank/Rank.js';\r\nimport ParticlesBg from 'particles-bg';\r\nimport React from 'react';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\r\nimport SignIn from './components/SignIn/SignIn.js';\r\nimport Register from './components/Register/Register';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: '',\r\n            imageUrl: '',\r\n            box: {\r\n            },\r\n            route: 'signin',\r\n            isSignedIn: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001')\r\n            .then(response => response.json())\r\n            .then(console.log)\r\n    }\r\n\r\n    calculateFaceLocation = (data) => {\r\n        const boundingBox = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n        const image = document.querySelector(\"#inputImage\");\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n        return {\r\n            leftCol: boundingBox.left_col * width,\r\n            topRow: boundingBox.top_row * height,\r\n            rightCol: width - (boundingBox.right_col * width),\r\n            bottomRow: height - (boundingBox.bottom_row * height),\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (box) => {\r\n        this.setState({box: box})\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    onButtonSubmit = ()=> {\r\n        this.setState({imageUrl: this.state.input})\r\n        const PAT = '18596d847895478d9b6733203db7cb82';\r\n        const USER_ID = 'claytonseager';\r\n        const APP_ID = 'cms-smart-brain-project-2023';\r\n        const MODEL_ID = 'face-detection';\r\n        const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\r\n        const IMAGE_URL = this.state.input;\r\n\r\n        const raw = JSON.stringify({\r\n            \"user_app_id\": {\r\n                \"user_id\": USER_ID,\r\n                \"app_id\": APP_ID\r\n            },\r\n            \"inputs\": [\r\n                {\r\n                    \"data\": {\r\n                        \"image\": {\r\n                            \"url\": IMAGE_URL\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Key ' + PAT\r\n            },\r\n            body: raw\r\n        };\r\n\r\n        fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => this.displayFaceBox(this.calculateFaceLocation(result)))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        if (route === 'signout') {\r\n            this.setState({isSignedIn: false})\r\n        } else if (route === 'home') {\r\n            this.setState({isSignedIn: true});\r\n        }\r\n        this.setState({route: route});\r\n    }\r\n\r\n    render() {\r\n        const { isSignedIn, imageUrl, route, box } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <ParticlesBg type=\"cobweb\" num={150} bg={true} />\r\n                <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n                { route === 'home'\r\n                    ? <div>\r\n                        <Logo/>\r\n                        <Rank/>\r\n                        <ImageLinkForm onInputChange={this.onInputChange}\r\n                                       onButtonSubmit={this.onButtonSubmit}/>\r\n                        <FaceRecognition box={box} imageUrl={imageUrl}/>\r\n                    </div>\r\n                    : (\r\n                        route === 'signin'\r\n                            ? <SignIn onRouteChange={this.onRouteChange}/>\r\n                            : <Register onRouteChange={this.onRouteChange}/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n\r\nClarifai Notes\r\nCreate an App on Clarifai and get the API Key in App Settings and paste the key in \"apiKey\" object property\r\nIF we get a Model Does Not exist error, onButtonSubmit uses predict and has changed to use the new Model ID for the model we are wanting to use\r\n\r\n */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}