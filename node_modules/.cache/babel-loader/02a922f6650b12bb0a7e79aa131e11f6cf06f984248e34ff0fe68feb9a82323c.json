{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\WebstormProjects\\\\AI_Face_Recognition\\\\src\\\\App.js\";\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport ParticlesBg from 'particles-bg';\nimport React from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const boundingBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.querySelector(\"#inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: boundingBox.left_col * width,\n        topRow: boundingBox.top_row * height,\n        rightCol: width - boundingBox.right_col * width,\n        bottomRow: height - boundingBox.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        num: 150,\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\n\n/*\r\n\r\nClarifai Notes\r\nCreate an App on Clarifai and get the API Key in App Settings and paste the key in \"apiKey\" object property\r\nIF we get a Model Does Not exist error, onButtonSubmit uses predict and has changed to use the new Model ID for the model we are wanting to use\r\n\r\n */","map":{"version":3,"names":["Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","React","FaceRecognition","SignIn","Register","jsxDEV","_jsxDEV","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","Component","constructor","props","loadUser","data","setState","calculateFaceLocation","boundingBox","outputs","regions","region_info","bounding_box","image","document","querySelector","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","mode","count","Object","assign","catch","console","log","err","onRouteChange","render","className","children","type","num","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/tyler/WebstormProjects/AI_Face_Recognition/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Navigation from './components/Navigation/Navigation.js';\r\nimport Logo from './components/Logo/Logo.js';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\r\nimport Rank from './components/Rank/Rank.js';\r\nimport ParticlesBg from 'particles-bg';\r\nimport React from 'react';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\r\nimport SignIn from './components/SignIn/SignIn.js';\r\nimport Register from './components/Register/Register';\r\n\r\nconst initialState = {\r\n    input: '',\r\n    imageUrl: '',\r\n    box: {},\r\n    route: 'signin',\r\n    isSignedIn: false,\r\n    user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n    }\r\n}\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            imageUrl: '',\r\n            box: {},\r\n            route: 'signin',\r\n            isSignedIn: false,\r\n            user: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                entries: 0,\r\n                joined: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    loadUser = (data) => {\r\n        this.setState({user: {\r\n                id: data.id,\r\n                name: data.name,\r\n                email: data.email,\r\n                entries: data.entries,\r\n                joined: data.joined\r\n            }})\r\n    }\r\n\r\n    calculateFaceLocation = (data) => {\r\n        const boundingBox = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n        const image = document.querySelector(\"#inputImage\");\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n        return {\r\n            leftCol: boundingBox.left_col * width,\r\n            topRow: boundingBox.top_row * height,\r\n            rightCol: width - (boundingBox.right_col * width),\r\n            bottomRow: height - (boundingBox.bottom_row * height),\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (box) => {\r\n        this.setState({box: box})\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    onButtonSubmit = () => {\r\n        this.setState({imageUrl: this.state.input});\r\n        fetch('http://localhost:3000', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                input: this.state.input\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response) {\r\n                    fetch('http://localhost:3000/image', {\r\n                        method: 'put',\r\n                        mode: 'cors',\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            id: this.state.user.id\r\n                        })\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(count => {\r\n                            this.setState(Object.assign(this.state.user, { entries: count}))\r\n                        })\r\n                        .catch(console.log)\r\n\r\n                }\r\n                this.displayFaceBox(this.calculateFaceLocation(response))\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        if (route === 'signout') {\r\n            this.setState(initialState)\r\n        } else if (route === 'home') {\r\n            this.setState({isSignedIn: true});\r\n        }\r\n        this.setState({route: route});\r\n    }\r\n\r\n    render() {\r\n        const { isSignedIn, imageUrl, route, box } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <ParticlesBg type=\"cobweb\" num={150} bg={true} />\r\n                <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n                { route === 'home'\r\n                    ? <div>\r\n                        <Logo/>\r\n                        <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n                        <ImageLinkForm onInputChange={this.onInputChange}\r\n                                       onButtonSubmit={this.onButtonSubmit}/>\r\n                        <FaceRecognition box={box} imageUrl={imageUrl}/>\r\n                    </div>\r\n                    : (\r\n                        route === 'signin'\r\n                            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n                            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n\r\nClarifai Notes\r\nCreate an App on Clarifai and get the API Key in App Settings and paste the key in \"apiKey\" object property\r\nIF we get a Model Does Not exist error, onButtonSubmit uses predict and has changed to use the new Model ID for the model we are wanting to use\r\n\r\n */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}